frequencia_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por tipo de congelador
teorico_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_calculado = mean(consumo_calculado))
# Calculando a média de consumo medido por tipo de congelador
medido_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia_por_tipo, teorico_por_tipo,  by = "tipo_congelador")
resultados_final <- merge(resultados_inicial, medido_por_tipo,  by = "tipo_congelador")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ tipo_congelador, data = dados)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
setwd("C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets")
write.csv(dados, file = "meu_arquivo.csv", row.names = FALSE)
write.csv(dados, file = "C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets/meu_arquivo.csv", row.names = FALSE)
d
# Carregando os dados de um arquivo .csv da pasta do Github da Fiocruz
dados <- read.csv("C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets/consumo_RM.csv")
library(dplyr)
# Calculando a frequência de cada tipo de congelador
frequencia_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por tipo de congelador
teorico_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_calculado = mean(consumo_calculado))
# Calculando a média de consumo medido por tipo de congelador
medido_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia_por_tipo, teorico_por_tipo,  by = "tipo_congelador")
resultados_final <- merge(resultados_inicial, medido_por_tipo,  by = "tipo_congelador")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ tipo_congelador, data = dados)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
if (summary(resultado_anova)[[1]][["Pr(>F)"]] < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Calculando a frequência de cada tipo de congelador
frequencia_por_tipo <- dados %>%
group_by(linhadoequipamento) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por tipo de congelador
teorico_por_tipo <- dados %>%
group_by(linhadoequipamento) %>%
summarise(media_consumo_calculado = mean(consumo_calculado))
# Calculando a média de consumo medido por tipo de congelador
medido_por_tipo <- dados %>%
group_by(linhadoequipamento) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia_por_tipo, teorico_por_tipo,  by = "linhadoequipamento")
resultados_final <- merge(resultados_inicial, medido_por_tipo,  by = "linhadoequipamento")
resultados_final <- merge(resultados_inicial, medido_por_tipo,  by = "linhadoequipamento")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ linhadoequipamento, data = dados)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
library(dplyr)
# Calculando a frequência por linha
dados_duplex <- subset(dados, tipo_congelador == 2)
frequencia_por_linha <- dados_duplex %>%
group_by(linhadoequipamento) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
teorico_por_linha <- dados %>%
group_by(linhadoequipamento) %>%
summarise(media_consumo_calculado = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
medido_por_linha <- dados %>%
group_by(linhadoequipamento) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia_por_linha, teorico_por_linha,  by = "linhadoequipamento")
resultados_final <- merge(resultados_inicial, medido_por_linha,  by = "linhadoequipamento")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ linhadoequipamento, data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
estratificado_por = "estado"
# Calculando a frequência por linha
dados_duplex <- subset(dados, tipo_congelador == 2)
frequencia <- dados_duplex %>%
group_by(estratificado_por) %>%
summarise(frequencia = n())
frequencia <- dados_duplex %>%
group_by($estratificado_por) %>%
estratificado_por <- "estado"
frequencia <- dados_duplex %>%
group_by($estratificado_por) %>%
frequencia <- dados_duplex %>%
group_by(estratificado_por) %>%
summarise(frequencia = n())
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = estratificado_por)
# Visualizando os resultados
print(resultados_final)
# Carregando os dados de um arquivo .csv da pasta do Github da Fiocruz
dados <- read.csv("C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets/consumo_RM.csv")
estratificado_por <- "estado"
# Calculando a frequência por linha
dados_duplex <- subset(dados, tipo_congelador == 2)
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
print(frequencia)
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = dados_duplex[, estratificado_por])
resultados_final <- merge(resultados_inicial, medido_por_linha,  by = dados_duplex[, estratificado_por])
# Carregando os dados de um arquivo .csv da pasta do Github da Fiocruz
dados <- read.csv("C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets/consumo_RM.csv")
estratificado_por <- "estado"
# Calculando a frequência por linha
dados_duplex <- subset(dados, tipo_congelador == 2)
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, medido_por_linha,  by = "dados_duplex[, estratificado_por]")
print(resultados_inicial)
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Visualizando os resultados
print(resultados_final)
View(resultados_inicial)
View(resultados_final)
View(resultados_final)
# Calculando a frequência de cada tipo de congelador
frequencia_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por tipo de congelador
teorico_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_calculado = mean(consumo_calculado))
# Calculando a média de consumo medido por tipo de congelador
medido_por_tipo <- dados %>%
group_by(tipo_congelador) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia_por_tipo, teorico_por_tipo,  by = "tipo_congelador")
resultados_final <- merge(resultados_inicial, medido_por_tipo,  by = "tipo_congelador")
# Visualizando os resultados
print(resultados_final)
estratificado_por <- "estado"
# Calculando a frequência por linha
dados_duplex <- subset(dados, tipo_congelador == 2)
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Colocar o nome da coluna de dados aqui
estratificado_por <- "tipo_congelador"
# Subset de equipamentos
dados_duplex <- subset(dados, tipo_congelador == 2)
# Colocar o nome da coluna de dados aqui
estratificado_por <- "tipo_congelador"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Colocar o nome da coluna de dados aqui
estratificado_por <- "tensao_conectada"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Se a variável possuir apenas duas classe, recomenda-se utilizar o test t de Student
# Realize o teste t de Student para amostras independentes
# A fórmula valor ~ classe especifica que você quer comparar os valores da coluna 'valor' entre os grupos definidos pela coluna 'classe'
teste_t <- t.test(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
# Imprima os resultados do teste t
print(teste_t)
# Colocar o nome da coluna de dados aqui
estratificado_por <- "climatizada"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Colocar o nome da coluna de dados aqui
estratificado_por <- "portas"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Colocar o nome da coluna de dados aqui
estratificado_por <- "ocupacao"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Colocar o nome da coluna de dados aqui
estratificado_por <- "linhadoequipamento"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Se a variável possuir apenas duas classe, recomenda-se utilizar o test t de Student
# Realize o teste t de Student para amostras independentes
# A fórmula valor ~ classe especifica que você quer comparar os valores da coluna 'valor' entre os grupos definidos pela coluna 'classe'
teste_t <- t.test(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
# Se a variável possuir apenas duas classe, recomenda-se utilizar o test t de Student
# Realize o teste t de Student para amostras independentes
# A fórmula valor ~ classe especifica que você quer comparar os valores da coluna 'valor' entre os grupos definidos pela coluna 'classe'
teste_t <- t.test(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
# Carregando os dados de um arquivo .csv da pasta do Github da Fiocruz
dados <- read.csv("C:/Users/luciano.kalabric/OneDrive - FIOCRUZ/GitHub/r_analysis/datasets/consumo_RM.csv")
library(dplyr)
# Subset de equipamentos
dados_duplex <- subset(dados, tipo_congelador == 2)
# Colocar o nome da coluna de dados aqui
estratificado_por <- "linhadoequipamento"
# Calculando a frequência dos equipamentos
frequencia <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(frequencia = n())
# Calculando a média de consumo teórico por linha
consumo_teorico <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_teorico = mean(consumo_calculado))
# Calculando a média de consumo medido por linha
consumo_medido <- dados_duplex %>%
group_by(dados_duplex[, estratificado_por]) %>%
summarise(media_consumo_medido = mean(consumo30))
# Combinando os resultados (opcional)
resultados_inicial <- left_join(frequencia, consumo_teorico,  by = "dados_duplex[, estratificado_por]")
resultados_final <- merge(resultados_inicial, consumo_medido,  by = "dados_duplex[, estratificado_por]")
# Visualizando os resultados
print(resultados_final)
# Faz um teste ANOVA para comparar as médias
# ANOVA é apropriado para comparar médias de mais de dois grupos
resultado_anova <- aov(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
print("Resultado do teste ANOVA:")
summary(resultado_anova)
# Se o ANOVA for significativo, faz testes post-hoc (Tukey) para comparar pares de médias
# Testes post-hoc são feitos para determinar quais grupos são significativamente diferentes entre si
# Correção: Garante que estamos extraindo um único valor p do summary do ANOVA
p_value <- summary(resultado_anova)[[1]][["Pr(>F)"]][1] # Pega o primeiro valor p da tabela
if (p_value < 0.05) { # Verifica se o valor p do ANOVA é significativo (0.05 é um limiar comum)
teste_tukey <- TukeyHSD(resultado_anova)
print("Teste de Tukey (comparações pairwise):")
print(teste_tukey)
} else {
print("ANOVA não foi significativo, não há necessidade de testes post-hoc.")
}
# Se a variável possuir apenas duas classe, recomenda-se utilizar o test t de Student
# Realize o teste t de Student para amostras independentes
# A fórmula valor ~ classe especifica que você quer comparar os valores da coluna 'valor' entre os grupos definidos pela coluna 'classe'
teste_t <- t.test(consumo30 ~ dados_duplex[, estratificado_por], data = dados_duplex)
